# Default values for zincobserve.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Credentials for authentication
auth:
  ZO_USER_NAME: "admin"
  ZO_USER_PASSWORD: "Complespass#123"

config:
  ZO_LOCAL_MODE: "false"
  ZO_ETCD_PREFIX: "/zinc/enl/"
  ZO_ETCD_USER: ""
  ZO_ETCD_PASSWORD: ""
  ZO_ETCD_COMMAND_TIMEOUT: "5"
  ZO_ETCD_CLIENT_CERT_AUTH: "false"
  ZO_DATA_WAL_DIR: "./data/wal/"
  ZO_DATA_STREAM_DIR: "./data/stream/"
  ZO_S3_BUCKET_NAME: "z-t1"
  ZO_MAX_FILE_RETENTION_TIME: "600"
  ZO_FILE_PUSH_INTERVAL: "10"
  ZO_JSON_LIMIT: "209715200"
  ZO_PAYLOAD_LIMIT: "209715200"
  ZO_MAX_FILE_SIZE_ON_DISK: "32" # value in mb
  ZO_TIME_STAMP_COL: "_timestamp"
  ZO_TS_ALLOWED_UPTO: "5"   
  ZO_INGESTION_SCHEMA_CHK: "true"
  ZO_UI_ENABLED: "true"
  ZO_METRICS_DEDUP_ENABLED: "true"
  ZO_USER_ZO_TRACING_ENABLEDNAME: "false"
  OTEL_OTLP_HTTP_ENDPOINT: "https://otel.dev2.zinclabs.dev/v1/traces"
  ZO_MEMORY_CACHE_MAX_SIZE: "1024"
  RUST_LOG: "info"
  RUST_BACKTRACE: "full"
  MIMALLOC_VERBOSE: "1"
  MIMALLOC_PAGE_RESET: "1"
  MIMALLOC_DECOMMIT_DELAY: "25"

replicaCount:
  compactor: 1
  ingester: 1
  querier: 1

image:
  repository: 058694856476.dkr.ecr.us-west-2.amazonaws.com/ziox-dev
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: 
    eks.amazonaws.com/role-arn: arn:aws:iam::058694856476:role/zinc-s3-eks
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000
  runAsUser: 10000
  runAsGroup: 3000
  runAsNonRoot: true
  # fsGroup: 2000

securityContext: {}

  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  # type: LoadBalancer
  port: 5080

ingress:
  enabled: false
  className: ""
  annotations: 
    kubernetes.io/ingress.class: nginx
    cert-manager.io/issuer: letsencrypt
    # kubernetes.io/tls-acme: true
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

etcd:
  # replicaCount: 1
  image:
    registry: docker.io
    repository: bitnami/etcd
    tag: 3.5.5-debian-11-r17
    digest: ""
  auth:
    rbac:
      create: false
      allowNoneAuthentication: true
      rootPassword: ""
  logLevel: "info"
  extraEnvVars: 
    - name: ETCD_QUOTA_BACKEND_BYTES
      value: "17179869184"
  persistence:
    size: 20Gi
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    annotations: {}